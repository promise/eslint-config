// https://github.com/jsx-eslint/eslint-plugin-react#list-of-supported-rules

/* eslint sort-keys: ["error", "asc"] -- More readable for long list */

// @ts-check
/** @type{ import("eslint").Linter.RulesRecord } */
const rules = {
  "jest/consistent-test-it": ["error"],
  "jest/expect-expect": ["error"],
  "jest/max-expects": ["off"],
  "jest/max-nested-describe": ["off"],
  "jest/no-alias-methods": ["error"],
  "jest/no-commented-out-tests": ["warn"],
  "jest/no-conditional-expect": ["off"],
  "jest/no-conditional-in-test": ["off"],
  "jest/no-deprecated-functions": ["error"],
  "jest/no-disabled-tests": ["warn"],
  "jest/no-done-callback": ["error"],
  "jest/no-duplicate-hooks": ["error"],
  "jest/no-export": ["error"],
  "jest/no-focused-tests": ["warn"],
  "jest/no-hooks": ["error"],
  "jest/no-identical-title": ["warn"],
  "jest/no-interpolation-in-snapshots": ["error"],
  "jest/no-jasmine-globals": ["error"],
  "jest/no-large-snapshots": ["warn"],
  "jest/no-mocks-import": ["error"],
  "jest/no-restricted-jest-methods": ["off"],
  "jest/no-restricted-matchers": ["off"],
  "jest/no-standalone-expect": ["error"],
  "jest/no-test-prefixes": ["error"],
  "jest/no-test-return-statement": ["error"],
  "jest/prefer-called-with": ["error"],
  "jest/prefer-comparison-matcher": ["error"],
  "jest/prefer-each": ["error"],
  "jest/prefer-equality-matcher": ["error"],
  "jest/prefer-expect-assertions": ["off"],
  "jest/prefer-expect-resolves": ["error"],
  "jest/prefer-hooks-in-order": ["error"],
  "jest/prefer-hooks-on-top": ["off"],
  "jest/prefer-lowercase-title": ["error"],
  "jest/prefer-mock-promise-shorthand": ["error"],
  "jest/prefer-snapshot-hint": ["error"],
  "jest/prefer-spy-on": ["error"],
  "jest/prefer-strict-equal": ["error"],
  "jest/prefer-to-be": ["error"],
  "jest/prefer-to-contain": ["error"],
  "jest/prefer-to-have-length": ["error"],
  "jest/prefer-todo": ["error"],
  "jest/require-hook": ["off"],
  "jest/require-to-throw-message": ["warn"],
  "jest/require-top-level-describe": ["off"],
  "jest/unbound-method": require("../typescript").rules?.["@typescript-eslint/unbound-method"] ?? ["off"],
  "jest/valid-describe-callback": ["error"],
  "jest/valid-expect": ["error"],
  "jest/valid-expect-in-promise": ["error"],
  "jest/valid-title": ["error"],
};

module.exports = rules;
